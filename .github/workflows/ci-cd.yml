name: CV CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint-and-validate:
    name: 🔍 Lint & Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm init -y
          npm install --save-dev htmlhint stylelint stylelint-config-standard
          npm install --save-dev markdown-link-check

      - name: Lint HTML
        run: npx htmlhint index.html

      - name: Validate CSS
        run: npx stylelint "**/*.css" --config-basedir .

      - name: Check for broken links
        run: |
          echo "Checking internal links in HTML..."
          # Buscar links rotos en el HTML
          grep -o 'href="[^"]*"' index.html | grep -v "mailto:" | grep -v "tel:" | grep -v "^#" || echo "No internal links found"

  security-scan:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  performance-test:
    name: 🚀 Performance Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli

      - name: Start local server
        run: |
          python3 -m http.server 8080 &
          sleep 5

      - name: Run Lighthouse CI
        run: |
          lhci autorun --collect.url=http://localhost:8080 --collect.numberOfRuns=1
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-deploy:
    name: 🚀 Build & Deploy
    runs-on: ubuntu-latest
    needs: [lint-and-validate, security-scan]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build site
        run: |
          # Crear directorio de build
          mkdir -p build
          
          # Copiar archivos necesarios
          cp index.html build/
          
          # Minificar HTML (opcional)
          echo "Build completed successfully!"
          
          # Generar archivo de build info
          echo "Build: $(date)" > build/build-info.txt
          echo "Commit: $GITHUB_SHA" >> build/build-info.txt
          echo "Branch: $GITHUB_REF_NAME" >> build/build-info.txt

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: build/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  notify:
    name: 📢 Notify Success
    runs-on: ubuntu-latest
    needs: [build-and-deploy]
    if: always()
    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.build-and-deploy.result }}" == "success" ]; then
            echo "✅ CV deployed successfully!"
            echo "🌐 URL: https://${{ github.repository_owner }}.github.io/CV_IMG"
          else
            echo "❌ Deployment failed!"
          fi
